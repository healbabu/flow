================================================================================
DIALOGFLOW FLOW ANALYZER - STAGING FILE
================================================================================

REQUEST ID: puml_diagram_generation
TIMESTAMP: 1751303090.1951025

----------------------------------------
ORIGINAL PROMPT
----------------------------------------

# PlantUML Diagram Generation for DialogFlow Flows

You are an expert in creating PlantUML diagrams for conversational AI flows. Your task is to analyze the provided DialogFlow data and create a comprehensive, well-structured PlantUML diagram that visualizes the flow architecture.

## Requirements

### 1. Diagram Structure
- Use proper PlantUML syntax
- Include all major components: Intents, Flows, Pages, Entity Types
- Show clear relationships and connections between components
- Use appropriate colors and styling for different component types

### 2. Component Organization
- **Intents**: Group related intents together
- **Flows**: Show the main flow structure with pages
- **Pages**: Include all pages with their relationships
- **Entity Types**: Show entity definitions and relationships
- **System Events**: Include error handlers and system events

### 3. Visual Design
- Use meaningful colors for different component types
- Include proper spacing and layout
- Add notes for important information
- Make the diagram easy to read and understand

### 4. Connection Types
- **Intent Triggers**: Show which intents trigger which pages
- **Page Transitions**: Show page-to-page navigation
- **Event Handlers**: Show system event handling
- **Form Completions**: Show form parameter relationships

## PlantUML Guidelines

### Styling
```plantuml
skinparam rectangle {
    BackgroundColor<<Intent>> #E3F2FD
    BorderColor<<Intent>> #1565C0
    FontColor<<Intent>> #0D47A1
}

skinparam rectangle {
    BackgroundColor<<Page>> #FFF3E0
    BorderColor<<Page>> #E65100
    FontColor<<Page>> #BF360C
}

skinparam rectangle {
    BackgroundColor<<Confirmation>> #F3E5F5
    BorderColor<<Confirmation>> #7B1FA2
    FontColor<<Confirmation>> #4A148C
}

skinparam rectangle {
    BackgroundColor<<System>> #FFEBEE
    BorderColor<<System>> #C62828
    FontColor<<System>> #B71C1C
}
```

### Component Types
- Use `<<Intent>>` for user intents
- Use `<<Page>>` for flow pages
- Use `<<Confirmation>>` for confirmation pages
- Use `<<System>>` for system events and handlers
- Use `<<Entity>>` for entity types

### Connection Labels
- Use descriptive labels for connections
- Include intent names for intent-based transitions
- Include conditions for conditional transitions
- Use "handles" for event handlers
- Use "targets" for direct page targets

## Analysis Instructions

1. **Analyze the flow structure** and identify the main components
2. **Group related components** logically
3. **Identify all connections** between components
4. **Determine appropriate styling** for each component type
5. **Add meaningful notes** for important information
6. **Ensure the diagram is complete** and shows all major relationships

## Output Format

Generate a complete PlantUML diagram that includes:
- Proper header with title and styling
- All major components organized logically
- Clear connections with descriptive labels
- Appropriate notes and documentation
- Proper footer

The diagram should be immediately usable in any PlantUML renderer and should provide a clear visual representation of the DialogFlow architecture.

Please analyze the provided DialogFlow data and create a comprehensive PlantUML diagram following these guidelines.


----------------------------------------
CONTEXT DATA
----------------------------------------
{
  "agent_info": {
    "name": "Unknown Agent",
    "language": "en",
    "start_flow": "Default Start Flow"
  },
  "intents": {},
  "flows": {},
  "entity_types": {},
  "flow_connections": [],
  "page_details": {}
}

----------------------------------------
FULL PROMPT (SENT TO GEMINI)
----------------------------------------

# PlantUML Diagram Generation for DialogFlow Flows

You are an expert in creating PlantUML diagrams for conversational AI flows. Your task is to analyze the provided DialogFlow data and create a comprehensive, well-structured PlantUML diagram that visualizes the flow architecture.

## Requirements

### 1. Diagram Structure
- Use proper PlantUML syntax
- Include all major components: Intents, Flows, Pages, Entity Types
- Show clear relationships and connections between components
- Use appropriate colors and styling for different component types

### 2. Component Organization
- **Intents**: Group related intents together
- **Flows**: Show the main flow structure with pages
- **Pages**: Include all pages with their relationships
- **Entity Types**: Show entity definitions and relationships
- **System Events**: Include error handlers and system events

### 3. Visual Design
- Use meaningful colors for different component types
- Include proper spacing and layout
- Add notes for important information
- Make the diagram easy to read and understand

### 4. Connection Types
- **Intent Triggers**: Show which intents trigger which pages
- **Page Transitions**: Show page-to-page navigation
- **Event Handlers**: Show system event handling
- **Form Completions**: Show form parameter relationships

## PlantUML Guidelines

### Styling
```plantuml
skinparam rectangle {
    BackgroundColor<<Intent>> #E3F2FD
    BorderColor<<Intent>> #1565C0
    FontColor<<Intent>> #0D47A1
}

skinparam rectangle {
    BackgroundColor<<Page>> #FFF3E0
    BorderColor<<Page>> #E65100
    FontColor<<Page>> #BF360C
}

skinparam rectangle {
    BackgroundColor<<Confirmation>> #F3E5F5
    BorderColor<<Confirmation>> #7B1FA2
    FontColor<<Confirmation>> #4A148C
}

skinparam rectangle {
    BackgroundColor<<System>> #FFEBEE
    BorderColor<<System>> #C62828
    FontColor<<System>> #B71C1C
}
```

### Component Types
- Use `<<Intent>>` for user intents
- Use `<<Page>>` for flow pages
- Use `<<Confirmation>>` for confirmation pages
- Use `<<System>>` for system events and handlers
- Use `<<Entity>>` for entity types

### Connection Labels
- Use descriptive labels for connections
- Include intent names for intent-based transitions
- Include conditions for conditional transitions
- Use "handles" for event handlers
- Use "targets" for direct page targets

## Analysis Instructions

1. **Analyze the flow structure** and identify the main components
2. **Group related components** logically
3. **Identify all connections** between components
4. **Determine appropriate styling** for each component type
5. **Add meaningful notes** for important information
6. **Ensure the diagram is complete** and shows all major relationships

## Output Format

Generate a complete PlantUML diagram that includes:
- Proper header with title and styling
- All major components organized logically
- Clear connections with descriptive labels
- Appropriate notes and documentation
- Proper footer

The diagram should be immediately usable in any PlantUML renderer and should provide a clear visual representation of the DialogFlow architecture.

Please analyze the provided DialogFlow data and create a comprehensive PlantUML diagram following these guidelines.


Context Data:
{
  "agent_info": {
    "name": "Unknown Agent",
    "language": "en",
    "start_flow": "Default Start Flow"
  },
  "intents": {},
  "flows": {},
  "entity_types": {},
  "flow_connections": [],
  "page_details": {}
}

================================================================================
END OF STAGING FILE
================================================================================
